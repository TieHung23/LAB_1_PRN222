@model IEnumerable<EVDMS.Core.Entities.VehicleModel>

@{
    ViewData["Title"] = "Trang Chủ";
}

<style>
  
    .hero-section {
        height: 70vh;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        color: white;
        position: relative;
        border-radius: 15px;
        overflow: hidden;
        margin-bottom: 5rem; 
    }

    .hero-video {
        position: absolute;
        top: 50%;
        left: 50%;
        min-width: 100%;
        min-height: 100%;
        width: auto;
        height: auto;
        z-index: -100;
        transform: translateX(-50%) translateY(-50%);
        background-size: cover;
    }

    .hero-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: radial-gradient(ellipse at center, rgba(0,0,0,0.2) 0%, rgba(0,0,0,0.8) 100%);
    }

    .hero-content {
        position: relative;
        z-index: 1;
    }

        .hero-content h1 {
            font-size: 4rem;
            font-weight: 700;
            text-shadow: 0 0 15px #00d9ff;
        }
 
    .product-section {
        padding: 60px 0;
    }

    .section-title {
        text-align: center;
        margin-bottom: 50px;
        font-size: 2.5rem;
        color: #00c0e0;
        text-transform: uppercase;
        letter-spacing: 2px;
        font-weight: 700;
    }

    .product-card {
        background-color: #2c2c2c;
        border: 1px solid #444;
        border-radius: 15px;
        overflow: hidden;
        text-align: center;
        transition: transform 0.4s ease, box-shadow 0.4s ease, opacity 0.5s ease, transform 0.5s ease;
        opacity: 0; 
        transform: translateY(50px);
    }

        .product-card.is-visible {
            opacity: 1;
            transform: translateY(0);
        }

        .product-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 10px 30px rgba(0, 192, 224, 0.4);
        }

        .product-card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-bottom: 2px solid #00c0e0;
        }

    .product-card-body {
        padding: 20px;
    }

        .product-card-body h5 {
            color: #00c0e0;
            font-size: 1.5rem;
            margin-bottom: 15px;
        }

</style>

<div class="hero-section">
    <div class="hero-overlay"></div>

    @* --- BẮT ĐẦU CẬP NHẬT VIDEO --- *@
    <video playsinline="playsinline" autoplay="autoplay" muted="muted" loop="loop" class="hero-video" poster="https://images.unsplash.com/photo-1617704548623-0f42d38a41b5?q=80&w=2070&auto-format&fit=crop">
        @* Thay thế link video cũ bằng đường dẫn video trong project *@
        <source src="~/videos/Xe dien may - Made with Clipchamp.mp4" type="video/mp4">
        Trình duyệt của bạn không hỗ trợ video.
    </video>
    @* --- KẾT THÚC CẬP NHẬT VIDEO --- *@

    <div class="hero-content">
        <h1 class="display-4">Cortexa - Kỷ nguyên di chuyển bằng điện</h1>
        <p class="lead">Hệ thống quản lý đại lý xe điện hàng đầu Việt Nam.</p>
        <p><a href="#" class="btn btn-primary btn-lg">Khám phá ngay &raquo;</a></p>
    </div>
</div>

@if (Model != null && Model.Any())
{
    <div class="container product-section">
        <h2 class="section-title">Dòng xe nổi bật</h2>
        <div class="row">
            @foreach (var car in Model)
            {
                <div class="col-md-4 mb-4">
                    <div class="product-card">
                        <img src="@(car.ImgUrl ?? "https://via.placeholder.com/400x250.png?text=Cortexa+EV")" alt="@car.ModelName">
                        <div class="product-card-body">
                            <h5>@car.ModelName</h5>
                            <p>@car.Description</p>
                            <a href="#" class="btn btn-primary">Xem chi tiết</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@section Scripts {
    <script>
      
        document.addEventListener("DOMContentLoaded", function() {
            const cards = document.querySelectorAll('.product-card');

            const observerOptions = {
                root: null, 
                rootMargin: '0px',
                threshold: 0.1 
            };

            const observer = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('is-visible');
                        observer.unobserve(entry.target);
                    }
                });
            }, observerOptions);

            cards.forEach(card => {
                observer.observe(card);
            });
        });
    </script>
}