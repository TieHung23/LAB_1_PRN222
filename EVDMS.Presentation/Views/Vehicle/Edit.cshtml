@model EVDMS.Presentation.Models.ViewModels.EditVehicleViewModel
@{
    ViewData["Title"] = "Chỉnh sửa dòng xe";
    ViewData["SubTitle"] = $"Cập nhật thông tin chi tiết cho dòng xe: {Model.ModelName}";
}

<div class="container-fluid mt-4">

    <div class="mb-4">
        <h1 class="display-5">@ViewData["Title"]</h1>
        <p class="lead text-muted">@ViewData["SubTitle"]</p>
    </div>
    <form asp-action="Edit" method="post" id="editVehicleForm" novalidate>
        @* Các trường ẩn quan trọng để xác định bản ghi *@
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="VehicleConfigId" />

        <div class="row">
            <div class="col-lg-8">
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-warning text-dark">
                        <h5 class="mb-0"><i class="fas fa-car me-2"></i>Thông tin cơ bản</h5>
                    </div>
                    <div class="card-body">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="ModelName" class="form-label fw-bold"></label>
                                <input asp-for="ModelName" class="form-control" required>
                                <div class="invalid-feedback"><span asp-validation-for="ModelName"></span></div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="Brand" class="form-label fw-bold"></label>
                                <input asp-for="Brand" class="form-control" required>
                                <div class="invalid-feedback"><span asp-validation-for="Brand"></span></div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="VehicleType" class="form-label fw-bold"></label>
                                <input asp-for="VehicleType" class="form-control" required>
                                <div class="invalid-feedback"><span asp-validation-for="VehicleType"></span></div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="ReleaseYear" class="form-label fw-bold"></label>
                                <input asp-for="ReleaseYear" type="number" class="form-control" required>
                                <div class="invalid-feedback"><span asp-validation-for="ReleaseYear"></span></div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label asp-for="ImgUrl" class="form-label fw-bold"></label>
                            <input asp-for="ImgUrl" type="url" class="form-control" id="imageUrlInput">
                            <div class="invalid-feedback"><span asp-validation-for="ImgUrl"></span></div>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Description" class="form-label fw-bold"></label>
                            <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                        </div>
                    </div>
                </div>

                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-dollar-sign me-2"></i>Giá và Bảo hành</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="BasePrice" class="form-label fw-bold"></label>
                                <input asp-for="BasePrice" type="number" class="form-control" required>
                                <div class="invalid-feedback"><span asp-validation-for="BasePrice"></span></div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="WarrantyPeriod" class="form-label fw-bold"></label>
                                <input asp-for="WarrantyPeriod" type="number" class="form-control" required>
                                <div class="invalid-feedback"><span asp-validation-for="WarrantyPeriod"></span></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-cogs me-2"></i>Hành động</h5>
                    </div>
                    <div class="card-body">
                        <div class="form-check form-switch mb-3">
                            <input asp-for="IsActive" class="form-check-input">
                            <label asp-for="IsActive" class="form-check-label"></label>
                        </div>
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-warning btn-lg" id="submitBtn"><i class="fas fa-save me-2"></i>Cập nhật</button>
                            <a asp-action="Index" class="btn btn-secondary"><i class="fas fa-arrow-left me-2"></i>Quay về danh sách</a>
                        </div>
                    </div>
                </div>
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-image me-2"></i>Xem trước ảnh</h5>
                    </div>
                    <div class="card-body text-center">
                        <img id="imagePreview" src="@(string.IsNullOrEmpty(Model.ImgUrl) ? "https://via.placeholder.com/300x200.png?text=Image+Preview" : Model.ImgUrl)" class="img-fluid rounded" alt="Image preview">
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<div class="modal fade" id="confirmationModal" tabindex="-1">
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <style>
        .card-header.bg-warning {
            border-bottom: 1px solid rgba(0,0,0,.125);
        }

        .form-control:focus, .form-select:focus {
            border-color: #ffc107;
            box-shadow: 0 0 0 0.25rem rgba(255, 193, 7, 0.25);
        }

        .fw-bold {
            font-weight: 600 !important;
        }

        #imagePreview {
            border: 1px solid #dee2e6;
            padding: 5px;
            transition: transform 0.3s ease-in-out;
        }

            #imagePreview:hover {
                transform: scale(1.05);
            }
    </style>

    <script>
        // Wait for the DOM to be fully loaded
        document.addEventListener("DOMContentLoaded", function() {

            // --- Element References ---
            const form = document.getElementById('editVehicleForm');
            const descriptionTextarea = document.getElementById('descriptionTextarea');
            const charCounter = document.getElementById('charCounter');
            const imgUrlInput = document.getElementById('imgUrlInput');
            const imagePreview = document.getElementById('imagePreview');
            const submitBtn = document.getElementById('submitBtn');
            const confirmUpdateBtn = document.getElementById('confirmUpdateBtn');
            const confirmationModal = new bootstrap.Modal(document.getElementById('confirmationModal'));
            const defaultImageUrl = 'https://via.placeholder.com/400x250.png?text=No+Image';

            // --- Function to update character count ---
            function updateCharCount() {
                if(descriptionTextarea && charCounter) {
                    const count = descriptionTextarea.value.length;
                    charCounter.textContent = `${count} ký tự`;
                }
            }

            // --- Initialize counter on page load ---
            updateCharCount();

            // --- Feature 1: Character Counter for Description ---
            if(descriptionTextarea) {
                descriptionTextarea.addEventListener('input', updateCharCount);
            }

            // --- Feature 2: Live Image Preview ---
            if(imgUrlInput && imagePreview) {
                imgUrlInput.addEventListener('input', function() {
                    const url = this.value.trim();
                    if (url) {
                        imagePreview.src = url;
                    } else {
                        imagePreview.src = defaultImageUrl;
                    }
                });

                // Handle image loading errors
                imagePreview.addEventListener('error', function() {
                    this.src = defaultImageUrl;
                });
            }

            // --- Feature 3: Bootstrap Custom Validation & Submit Confirmation ---
            if (submitBtn && form) {
                submitBtn.addEventListener('click', function(event) {
                    // Prevent form submission
                    event.preventDefault();

                    // Add was-validated class to show validation feedback
                    form.classList.add('was-validated');

                    // Check if the form is valid
                    if (form.checkValidity()) {
                        // If valid, show the confirmation modal
                        confirmationModal.show();
                    }
                });
            }

            // --- Feature 4: Handle final form submission from modal ---
            if(confirmUpdateBtn && form) {
                confirmUpdateBtn.addEventListener('click', function() {
                    // Submit the form programmatically
                    form.submit();
                });
            }

        }); // End of DOMContentLoaded
    </script>
}